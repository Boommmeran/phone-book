{"version":3,"file":"static/js/206.25af24ca.chunk.js","mappings":"4JAEaA,E,QAAkBC,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+F,UCAzB,SAASC,EAASC,GAAgB,IAAbC,EAAQD,EAARC,SAClC,OAAOC,EAAAA,EAAAA,KAACP,EAAe,CAAAM,SAAEA,GAC3B,C,sECFaE,E,QAAgBP,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8B,UCA5B,SAASM,EAAOJ,GAAgB,IAAbC,EAAQD,EAARC,SAChC,OAAOC,EAAAA,EAAAA,KAACC,EAAa,CAAAF,SAAEA,GACzB,C,gKCDaI,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HASzBS,EAAQX,EAAAA,EAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8FAOpBW,GAAQb,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,mSAiBrBc,EAAqBhB,EAAAA,EAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4FAO/BgB,EAASlB,EAAAA,EAAAA,OAAamB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qS,UC7B7BkB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,SAAS,wBAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,0BAGnB,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAACtB,EAAAA,EAAa,CAAAF,SAAA,EACZC,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAAAE,SAAC,YACXC,EAAAA,EAAAA,KAACwB,EAAAA,GAAM,CACLC,cAAe,CAAER,MAAO,GAAIE,SAAU,IACtCO,SAVmB,SAAH5B,EAAA6B,GAA4C,IAAtCV,EAAKnB,EAALmB,MAAOE,EAAQrB,EAARqB,SAAcS,EAASD,EAATC,UAC/CP,GAASQ,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOE,SAAAA,KACxBS,GACF,EAQME,iBAAkBhB,EAAOf,UAEzBwB,EAAAA,EAAAA,MAACpB,EAAU,CAAAJ,SAAA,EACTwB,EAAAA,EAAAA,MAAClB,EAAK,CAAAN,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACO,EAAK,CACJwB,KAAK,QACLC,KAAK,QACLC,YAAY,+BAEdjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CAACF,KAAK,QAAOjC,SACvB,SAAAoC,GAAG,OAAInC,EAAAA,EAAAA,KAACU,EAAkB,CAAAX,SAAEoC,GAAyB,QAG1DZ,EAAAA,EAAAA,MAAClB,EAAK,CAAAN,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACO,EAAK,CAACwB,KAAK,WAAWC,KAAK,cAC5BhC,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CAACF,KAAK,WAAUjC,SAC1B,SAAAoC,GAAG,OAAInC,EAAAA,EAAAA,KAACU,EAAkB,CAAAX,SAAEoC,GAAyB,QAG1DnC,EAAAA,EAAAA,KAACY,EAAM,CAACmB,KAAK,SAAQhC,SAAC,kBAKhC,C","sources":["components/MainTitle/MainTitle.styled.jsx","components/MainTitle/MainTitle.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledMainTitle = styled.h1`\n  font-size: 3em;\n  color: #0055b3;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import { StyledMainTitle } from './MainTitle.styled';\n\nexport default function MainTitle({ children }) {\n  return <StyledMainTitle>{children}</StyledMainTitle>;\n}\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  padding: 30px 0;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: #0055b3;\n  font-weight: bold;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled(Field)`\n  position: relative;\n  width: 100%;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  outline: none;\n  margin-top: 15px;\n\n  :focus {\n    border-color: #007bff;\n    outline: none;\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  }\n`;\n\nexport const StyledErrorMessage = styled.div`\n  position: absolute;\n  color: #c82333;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  :hover,\n  :focus {\n    background-color: #0055b3;\n  }\n`;\n","import { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport MainTitle from 'components/MainTitle';\nimport StyledSection from 'components/Section';\nimport {\n  StyledForm,\n  Label,\n  Input,\n  Button,\n  StyledErrorMessage,\n} from './LoginPage.styled';\n\nconst schema = yup.object().shape({\n  email: yup.string().required('It is required field'),\n  password: yup.string().required('It is required field'),\n});\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <StyledSection>\n      <MainTitle>Log In</MainTitle>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmitForm}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Example: example@mail.com\"\n            />\n            <ErrorMessage name=\"email\">\n              {msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n            </ErrorMessage>\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\">\n              {msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n            </ErrorMessage>\n          </Label>\n          <Button type=\"submit\">Log In</Button>\n        </StyledForm>\n      </Formik>\n    </StyledSection>\n  );\n}\n"],"names":["StyledMainTitle","styled","_templateObject","_taggedTemplateLiteral","MainTitle","_ref","children","_jsx","StyledSection","Section","StyledForm","Form","Label","_templateObject2","Input","Field","_templateObject3","StyledErrorMessage","_templateObject4","Button","_templateObject5","schema","yup","shape","email","required","password","LoginPage","dispatch","useDispatch","_jsxs","Formik","initialValues","onSubmit","_ref2","resetForm","logIn","validationSchema","type","name","placeholder","ErrorMessage","msg"],"sourceRoot":""}